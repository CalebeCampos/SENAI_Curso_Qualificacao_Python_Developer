import os
import platform
import psutil
import socket

def main():
    
    sistema_operacional = platform.system()
    versao_sistema_operacional = platform.release()
    usuario_sistema_operacional = os.environ.get("USERNAME")
    endereco_ipv4 = socket.gethostbyname(socket.gethostname())

    # obtendo as portas abertas do sistema operacional
    portas_abertas = psutil.net_connections(kind="inet")
    lista_portas_tcp_abertas = [conn.laddr.port for conn in portas_abertas if conn.status == psutil.CONN_LISTEN]
    lista_portas_udp = [conn for conn in portas_abertas if conn.type == socket.SOCK_DGRAM]
    lista_portas_udp_abertas = [conn.laddr.port for conn in lista_portas_udp]

    # removendo portas repetidas
    lista_portas_tcp_abertas = list(set(lista_portas_tcp_abertas))
    lista_portas_udp_abertas = list(set(lista_portas_udp_abertas))

    # ordenando a sequencia de portas abertas
    lista_portas_tcp_abertas.sort()
    lista_portas_udp_abertas.sort()

    # saida de dados...
    print(f"Sistema Operacional: {sistema_operacional}")
    print(f"Versao S.O.: {versao_sistema_operacional}")
    print(f"Usuario S.O.: {usuario_sistema_operacional}")
    print(f"IPv4: {endereco_ipv4}")
    print(f"\nPortas TCP abertas: ")
    for porta in lista_portas_tcp_abertas:
        print(porta)
    print(f"\nPortas UDP abertas: ")
    for porta in lista_portas_udp_abertas:
        print(porta)


if __name__ == "__main__":
    main()